/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestERC721,
  TestERC721Interface,
} from "../../../contracts/test/TestERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600d81526020016c151c985a5d119bdc99d953999d609a1b81525060405180604001604052806006815260200165151191d3919560d21b815250816000908162000068919062000125565b50600162000077828262000125565b505050620001f1565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ab57607f821691505b602082108103620000cc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012057600081815260208120601f850160051c81016020861015620000fb5750805b601f850160051c820191505b818110156200011c5782815560010162000107565b5050505b505050565b81516001600160401b0381111562000141576200014162000080565b620001598162000152845462000096565b84620000d2565b602080601f831160018114620001915760008415620001785750858301515b600019600386901b1c1916600185901b1785556200011c565b600085815260208120601f198616915b82811015620001c257888601518255948401946001909101908401620001a1565b5085821015620001e15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6112f780620002016000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b80636352211e146101a557806370a08231146101b857806395d89b41146101d957600080fd5b8063081812fc116100c8578063081812fc14610141578063095ea7b31461016c57806323b872dd1461017f57806342842e0e1461019257600080fd5b806301173a74146100ef57806301ffc9a71461010457806306fdde031461012c575b600080fd5b6101026100fd366004610e62565b610256565b005b610117610112366004610e93565b61027a565b60405190151581526020015b60405180910390f35b6101346102cc565b6040516101239190610f00565b61015461014f366004610f13565b61035e565b6040516001600160a01b039091168152602001610123565b61010261017a366004610f2c565b610385565b61010261018d366004610f56565b61049f565b6101026101a0366004610f56565b6104d0565b6101546101b3366004610f13565b6104eb565b6101cb6101c6366004610e62565b61054b565b604051908152602001610123565b6101346105d1565b6101026101ef366004610f92565b6105e0565b610102610202366004610fe4565b6105ef565b610134610215366004610f13565b610627565b6101176102283660046110c0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102628160065461069b565b60068054906000610272836110f3565b919050555050565b60006001600160e01b031982166380ac58cd60e01b14806102ab57506001600160e01b03198216635b5e139f60e01b145b806102c657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102db9061111a565b80601f01602080910402602001604051908101604052809291908181526020018280546103079061111a565b80156103545780601f1061032957610100808354040283529160200191610354565b820191906000526020600020905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b600061036982610826565b506000908152600460205260409020546001600160a01b031690565b6000610390826104eb565b9050806001600160a01b0316836001600160a01b0316036104025760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061041e575061041e8133610228565b6104905760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103f9565b61049a8383610888565b505050565b6104a933826108f6565b6104c55760405162461bcd60e51b81526004016103f990611154565b61049a838383610975565b61049a838383604051806020016040528060008152506105ef565b6000818152600260205260408120546001600160a01b0316806102c65760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f9565b60006001600160a01b0382166105b55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103f9565b506001600160a01b031660009081526003602052604090205490565b6060600180546102db9061111a565b6105eb338383610ad9565b5050565b6105f933836108f6565b6106155760405162461bcd60e51b81526004016103f990611154565b61062184848484610ba7565b50505050565b606061063282610826565b600061064960408051602081019091526000815290565b905060008151116106695760405180602001604052806000815250610694565b8061067384610bda565b6040516020016106849291906111a1565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166106f15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103f9565b6000818152600260205260409020546001600160a01b0316156107565760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f9565b6000818152600260205260409020546001600160a01b0316156107bb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f9565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818152600260205260409020546001600160a01b03166108855760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f9565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906108bd826104eb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610902836104eb565b9050806001600160a01b0316846001600160a01b0316148061094957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061096d5750836001600160a01b03166109628461035e565b6001600160a01b0316145b949350505050565b826001600160a01b0316610988826104eb565b6001600160a01b0316146109ae5760405162461bcd60e51b81526004016103f9906111d0565b6001600160a01b038216610a105760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f9565b826001600160a01b0316610a23826104eb565b6001600160a01b031614610a495760405162461bcd60e51b81526004016103f9906111d0565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610b3a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f9565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610bb2848484610975565b610bbe84848484610c6d565b6106215760405162461bcd60e51b81526004016103f990611215565b60606000610be783610d6e565b600101905060008167ffffffffffffffff811115610c0757610c07610fce565b6040519080825280601f01601f191660200182016040528015610c31576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c3b57509392505050565b60006001600160a01b0384163b15610d6357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610cb1903390899088908890600401611267565b6020604051808303816000875af1925050508015610cec575060408051601f3d908101601f19168201909252610ce9918101906112a4565b60015b610d49573d808015610d1a576040519150601f19603f3d011682016040523d82523d6000602084013e610d1f565b606091505b508051600003610d415760405162461bcd60e51b81526004016103f990611215565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061096d565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610dad5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610dd9576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610df757662386f26fc10000830492506010015b6305f5e1008310610e0f576305f5e100830492506008015b6127108310610e2357612710830492506004015b60648310610e35576064830492506002015b600a83106102c65760010192915050565b80356001600160a01b0381168114610e5d57600080fd5b919050565b600060208284031215610e7457600080fd5b61069482610e46565b6001600160e01b03198116811461088557600080fd5b600060208284031215610ea557600080fd5b813561069481610e7d565b60005b83811015610ecb578181015183820152602001610eb3565b50506000910152565b60008151808452610eec816020860160208601610eb0565b601f01601f19169290920160200192915050565b6020815260006106946020830184610ed4565b600060208284031215610f2557600080fd5b5035919050565b60008060408385031215610f3f57600080fd5b610f4883610e46565b946020939093013593505050565b600080600060608486031215610f6b57600080fd5b610f7484610e46565b9250610f8260208501610e46565b9150604084013590509250925092565b60008060408385031215610fa557600080fd5b610fae83610e46565b915060208301358015158114610fc357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ffa57600080fd5b61100385610e46565b935061101160208601610e46565b925060408501359150606085013567ffffffffffffffff8082111561103557600080fd5b818701915087601f83011261104957600080fd5b81358181111561105b5761105b610fce565b604051601f8201601f19908116603f0116810190838211818310171561108357611083610fce565b816040528281528a602084870101111561109c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156110d357600080fd5b6110dc83610e46565b91506110ea60208401610e46565b90509250929050565b60006001820161111357634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061112e57607f821691505b60208210810361114e57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516111b3818460208801610eb0565b8351908301906111c7818360208801610eb0565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061129a90830184610ed4565b9695505050505050565b6000602082840312156112b657600080fd5b815161069481610e7d56fea2646970667358221220fb8be004d8029fa68596071947ba9c79c4b3975335e50734b42acfc159bb690464736f6c63430008140033";

type TestERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC721__factory extends ContractFactory {
  constructor(...args: TestERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestERC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestERC721__factory {
    return super.connect(runner) as TestERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC721Interface {
    return new Interface(_abi) as TestERC721Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestERC721 {
    return new Contract(address, _abi, runner) as unknown as TestERC721;
  }
}
