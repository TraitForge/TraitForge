/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DevFund,
  DevFundInterface,
} from "../../../contracts/DevFund/DevFund";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dev",
        type: "address",
      },
    ],
    name: "AddDev",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dev",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dev",
        type: "address",
      },
    ],
    name: "RemoveDev",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "devInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingRewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isDev",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "removeDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerDev",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDevCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108af806100826000396000f3fe6080604052600436106100a05760003560e01c806382f802481161006457806382f80248146102035780638da5cb5b14610219578063b91d3ace14610241578063c4026d7b14610261578063cceb0fbc14610281578063f2fde38b146102ca57600080fd5b80630c3f64bf1461014e57806331d7a26214610193578063321f4a11146101c15780634e71d92d146101d7578063715018a6146101ee57600080fd5b3661014957600254156100d6576002546100ba9034610801565b600360008282546100cb9190610823565b909155506101129050565b600080546040516001600160a01b03909116913480156108fc02929091818181858888f19350505050158015610110573d6000803e3d6000fd5b505b60405134815233907f54a5b8782470a0d2c022b3b9e5e729503ac5dbdfe053afeb4559f9297f7565a69060200160405180910390a2005b600080fd5b34801561015a57600080fd5b5061017e610169366004610836565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561019f57600080fd5b506101b36101ae366004610836565b6102ea565b60405190815260200161018a565b3480156101cd57600080fd5b506101b360035481565b3480156101e357600080fd5b506101ec61033c565b005b3480156101fa57600080fd5b506101ec6103e1565b34801561020f57600080fd5b506101b360025481565b34801561022557600080fd5b506000546040516001600160a01b03909116815260200161018a565b34801561024d57600080fd5b506101ec61025c366004610836565b6103f3565b34801561026d57600080fd5b506101ec61027c366004610836565b6104e6565b34801561028d57600080fd5b506102b561029c366004610836565b6005602052600090815260409020805460019091015482565b6040805192835260208301919091520161018a565b3480156102d657600080fd5b506101ec6102e5366004610836565b610620565b6001600160a01b0381166000908152600560205260408120546003546103109190610866565b6001600160a01b0383166000908152600560205260409020600101546103369190610823565b92915050565b610344610699565b33600090815260056020526040812080546003549192916103659190610866565b82600101546103749190610823565b905080156103d057600061038833836106f2565b90506103948183610866565b600184015560405181815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a2505b5060035490556103df60018055565b565b6103e9610741565b6103df600061079b565b6103fb610741565b6001600160a01b03811660009081526004602052604090205460ff161561045e5760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b60448201526064015b60405180910390fd5b6001600160a01b0381166000908152600460205260408120805460ff191660019081179091556002805491929091610497908490610823565b90915550506003546001600160a01b03821660008181526005602052604080822093909355915190917f6cc9ca71b1449fb438ba830579ccf46aa6ba9c1d031962654d03a9698181ae6291a250565b6104ee610741565b6001600160a01b03811660009081526004602052604090205460ff166105485760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420646576206164647265737360881b6044820152606401610455565b6001600160a01b0381166000908152600460205260408120805460ff19169055600280546001929061057b908490610866565b90915550506001600160a01b0381166000908152600560205260409020546003546105a69190610866565b6001600160a01b038216600090815260056020526040812060010180549091906105d1908490610823565b90915550506003546001600160a01b03821660008181526005602052604080822093909355915190917f45867a7042effa572a3eca706a15679b95cf7b7f6d2958475d2762d4e5877be291a250565b610628610741565b6001600160a01b03811661068d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610455565b6106968161079b565b50565b6002600154036106eb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610455565b6002600155565b6000303180831115610702578092505b6040516001600160a01b0385169084156108fc029085906000818181858888f19350505050158015610738573d6000803e3d6000fd5b50919392505050565b6000546001600160a01b031633146103df5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610455565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b60008261081e57634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610336576103366107eb565b60006020828403121561084857600080fd5b81356001600160a01b038116811461085f57600080fd5b9392505050565b81810381811115610336576103366107eb56fea26469706673582212202024d2118ef8e0ba543c8bf95ea66d99a11fe0055a53dda8d8bf5db358459e3564736f6c63430008140033";

type DevFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DevFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DevFund__factory extends ContractFactory {
  constructor(...args: DevFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DevFund & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DevFund__factory {
    return super.connect(runner) as DevFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DevFundInterface {
    return new Interface(_abi) as DevFundInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DevFund {
    return new Contract(address, _abi, runner) as unknown as DevFund;
  }
}
